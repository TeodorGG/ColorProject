{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/tudordeviza/Documents/UTM/Color Project/src/page/test_answer.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport default function Answer(_ref) {\n  var answer_text = _ref.answer_text,\n      index = _ref.index,\n      question = _ref.question;\n\n  var _useState = useState(\"#fff\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      bk = _useState2[0],\n      setBK = _useState2[1];\n\n  return React.createElement(TouchableOpacity, {\n    style: [test_page_style.slide_answer_container, {\n      backgroundColor: bk\n    }],\n    onPress: function onPress() {\n      if (!question.ckecked) {\n        if (question.answer_correct === answer_text) {\n          setBK(\"#83f297\");\n        } else {\n          setBK('#f27a72');\n        }\n\n        question.ckecked = true;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: test_page_style.slide_answer_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, answer_text));\n}\nvar test_page_style = StyleSheet.create({\n  slide_answer_container: {\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    width: 250,\n    padding: 10,\n    marginBottom: 15\n  },\n  slide_answer_text: {}\n});","map":{"version":3,"sources":["/Users/tudordeviza/Documents/UTM/Color Project/src/page/test_answer.js"],"names":["React","useState","Answer","answer_text","index","question","bk","setBK","test_page_style","slide_answer_container","backgroundColor","ckecked","answer_correct","slide_answer_text","StyleSheet","create","borderRadius","borderColor","borderWidth","width","padding","marginBottom"],"mappings":";;AAAA,OAAQA,KAAR,IAAiBC,QAAjB,QAAkC,OAAlC;;;;;;;AAIA,eAAe,SAASC,MAAT,OAAgD;AAAA,MAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,QAAW,QAAXA,QAAW;;AAC3D,kBAAoBJ,QAAQ,CAAC,MAAD,CAA5B;AAAA;AAAA,MAAOK,EAAP;AAAA,MAAWC,KAAX;;AAQA,SACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAI,CAACC,eAAe,CAACC,sBAAjB,EAAyC;AAACC,MAAAA,eAAe,EAAGJ;AAAnB,KAAzC,CAA3B;AACI,IAAA,OAAO,EAAI,mBAAI;AACX,UAAG,CAACD,QAAQ,CAACM,OAAb,EAAqB;AACjB,YAAGN,QAAQ,CAACO,cAAT,KAA4BT,WAA/B,EAA2C;AACvCI,UAAAA,KAAK,CAAC,SAAD,CAAL;AACH,SAFD,MAEO;AACHA,UAAAA,KAAK,CAAC,SAAD,CAAL;AACH;;AACDF,QAAAA,QAAQ,CAACM,OAAT,GAAmB,IAAnB;AACH;AACJ,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIH,eAAe,CAACK,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmDV,WAAnD,CAZJ,CADJ;AAgBH;AAGD,IAAMK,eAAe,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAItCN,EAAAA,sBAAsB,EAAG;AACrBO,IAAAA,YAAY,EAAG,CADM;AAErBC,IAAAA,WAAW,EAAG,OAFO;AAGrBC,IAAAA,WAAW,EAAG,CAHO;AAIrBC,IAAAA,KAAK,EAAG,GAJa;AAKrBC,IAAAA,OAAO,EAAG,EALW;AAMrBC,IAAAA,YAAY,EAAG;AANM,GAJa;AAatCR,EAAAA,iBAAiB,EAAG;AAbkB,CAAlB,CAAxB","sourcesContent":["import  React, { useState } from  'react';\nimport { View, StyleSheet, TouchableOpacity, Image, Text, Dimensions } from 'react-native';\n\n\nexport default function Answer({answer_text, index, question}) {\n    const [bk, setBK] = useState(\"#fff\"); \n  \n    // if(question.ckecked){\n    //     if(question.answer_correct === answer_text){\n    //         setBK(\"#83f297\")\n    //     }     \n    // }\n\n    return (\n        <TouchableOpacity style = {[test_page_style.slide_answer_container, {backgroundColor : bk}]}\n            onPress = {()=>{\n                if(!question.ckecked){\n                    if(question.answer_correct === answer_text){\n                        setBK(\"#83f297\")\n                    } else {\n                        setBK('#f27a72')\n                    }\n                    question.ckecked = true;\n                }\n            }}\n        >\n            <Text style = {test_page_style.slide_answer_text}>{answer_text}</Text>\n        </TouchableOpacity>\n    )\n}\n\n\nconst test_page_style = StyleSheet.create({\n    \n\n\n    slide_answer_container : {\n        borderRadius : 5, \n        borderColor : 'black',\n        borderWidth : 1,\n        width : 250,\n        padding : 10,\n        marginBottom : 15\n    },\n\n    slide_answer_text : {\n\n    },\n\n    \n    \n    \n})"]},"metadata":{},"sourceType":"module"}