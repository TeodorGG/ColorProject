{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tudordeviza/Documents/UTM/Color Project/src/page/test_answer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar Answer = function (_Component) {\n  _inherits(Answer, _Component);\n\n  var _super = _createSuper(Answer);\n\n  function Answer(props) {\n    var _this;\n\n    _classCallCheck(this, Answer);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      bk: '#fff'\n    };\n\n    if (_this.props.question.selected !== -1) {\n      if (_this.props.question.selected === _this.props.index) {\n        alert('2');\n\n        if (_this.props.question.answer_correct === _this.props.answer_text) {\n          _this.setState({\n            bk: \"#83f297\"\n          });\n        } else {\n          _this.setState({\n            bk: \"#f27a72\"\n          });\n        }\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(Answer, [{\n    key: \"setSS\",\n    value: function setSS() {\n      this.setState({\n        bk: \"#83f297\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(TouchableOpacity, {\n        style: [test_page_style.slide_answer_container, {\n          backgroundColor: this.state.bk\n        }],\n        onPress: function onPress() {\n          if (!_this2.props.question.ckecked) {\n            if (_this2.props.question.answer_correct === _this2.props.answer_text) {\n              _this2.setState({\n                bk: \"#83f297\"\n              });\n            } else {\n              _this2.setState({\n                bk: \"#f27a72\"\n              });\n            }\n\n            _this2.props.question.ckecked = true;\n\n            _this2.props.that.setRespons(_this2.props.answer_text, _this2.props.question.id);\n\n            _this2.props.question.selected = _this2.props.index;\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: test_page_style.slide_answer_text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, this.props.answer_text));\n    }\n  }]);\n\n  return Answer;\n}(Component);\n\nexport { Answer as default };\nvar test_page_style = StyleSheet.create({\n  slide_answer_container: {\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    width: 250,\n    padding: 10,\n    marginBottom: 15\n  },\n  slide_answer_text: {}\n});","map":{"version":3,"sources":["/Users/tudordeviza/Documents/UTM/Color Project/src/page/test_answer.js"],"names":["React","Component","Answer","props","state","bk","question","selected","index","alert","answer_correct","answer_text","setState","test_page_style","slide_answer_container","backgroundColor","ckecked","that","setRespons","id","slide_answer_text","StyleSheet","create","borderRadius","borderColor","borderWidth","width","padding","marginBottom"],"mappings":";;;;;;;;;;;AAAA,OAAQA,KAAR,IAAiBC,SAAjB,QAAmC,OAAnC;;;;;;;;IAIqBC,M;;;;;AACjB,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAG;AADI,KAAb;;AAIA,QAAG,MAAKF,KAAL,CAAWG,QAAX,CAAoBC,QAApB,KAAiC,CAAC,CAArC,EAAwC;AACpC,UAAG,MAAKJ,KAAL,CAAWG,QAAX,CAAoBC,QAApB,KAAiC,MAAKJ,KAAL,CAAWK,KAA/C,EAAqD;AACjDC,QAAAA,KAAK,CAAC,GAAD,CAAL;;AAEA,YAAG,MAAKN,KAAL,CAAWG,QAAX,CAAoBI,cAApB,KAAuC,MAAKP,KAAL,CAAWQ,WAArD,EAAiE;AAC7D,gBAAKC,QAAL,CAAc;AACVP,YAAAA,EAAE,EAAG;AADK,WAAd;AAGH,SAJD,MAIO;AACH,gBAAKO,QAAL,CAAc;AACVP,YAAAA,EAAE,EAAG;AADK,WAAd;AAGH;AACJ;AACJ;;AApBa;AAqBjB;;;;WAED,iBAAO;AACH,WAAKO,QAAL,CAAc;AACVP,QAAAA,EAAE,EAAG;AADK,OAAd;AAGH;;;WACD,kBAAQ;AAAA;;AACJ,aACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAI,CAACQ,eAAe,CAACC,sBAAjB,EAAyC;AAACC,UAAAA,eAAe,EAAG,KAAKX,KAAL,CAAWC;AAA9B,SAAzC,CAA3B;AACI,QAAA,OAAO,EAAI,mBAAI;AACX,cAAG,CAAC,MAAI,CAACF,KAAL,CAAWG,QAAX,CAAoBU,OAAxB,EAAgC;AAC5B,gBAAG,MAAI,CAACb,KAAL,CAAWG,QAAX,CAAoBI,cAApB,KAAuC,MAAI,CAACP,KAAL,CAAWQ,WAArD,EAAiE;AAC7D,cAAA,MAAI,CAACC,QAAL,CAAc;AACVP,gBAAAA,EAAE,EAAG;AADK,eAAd;AAGH,aAJD,MAIO;AACH,cAAA,MAAI,CAACO,QAAL,CAAc;AACVP,gBAAAA,EAAE,EAAG;AADK,eAAd;AAGH;;AACD,YAAA,MAAI,CAACF,KAAL,CAAWG,QAAX,CAAoBU,OAApB,GAA8B,IAA9B;;AACA,YAAA,MAAI,CAACb,KAAL,CAAWc,IAAX,CAAgBC,UAAhB,CAA2B,MAAI,CAACf,KAAL,CAAWQ,WAAtC,EAAmD,MAAI,CAACR,KAAL,CAAWG,QAAX,CAAoBa,EAAvE;;AACA,YAAA,MAAI,CAAChB,KAAL,CAAWG,QAAX,CAAoBC,QAApB,GAA+B,MAAI,CAACJ,KAAL,CAAWK,KAA1C;AACH;AACJ,SAhBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAkBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIK,eAAe,CAACO,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmD,KAAKjB,KAAL,CAAWQ,WAA9D,CAlBJ,CADJ;AAsBH;;;;EApD+BV,S;;SAAfC,M;AAyDrB,IAAMW,eAAe,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAItCR,EAAAA,sBAAsB,EAAG;AACrBS,IAAAA,YAAY,EAAG,CADM;AAErBC,IAAAA,WAAW,EAAG,OAFO;AAGrBC,IAAAA,WAAW,EAAG,CAHO;AAIrBC,IAAAA,KAAK,EAAG,GAJa;AAKrBC,IAAAA,OAAO,EAAG,EALW;AAMrBC,IAAAA,YAAY,EAAG;AANM,GAJa;AAatCR,EAAAA,iBAAiB,EAAG;AAbkB,CAAlB,CAAxB","sourcesContent":["import  React, { Component } from  'react';\nimport { View, StyleSheet, TouchableOpacity, Image, Text, Dimensions } from 'react-native';\n\n\nexport default class Answer extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            bk : '#fff'\n        }\n\n        if(this.props.question.selected !== -1) {\n            if(this.props.question.selected === this.props.index){\n                alert('2')\n\n                if(this.props.question.answer_correct === this.props.answer_text){\n                    this.setState({\n                        bk : \"#83f297\"\n                    })\n                } else {\n                    this.setState({\n                        bk : \"#f27a72\"\n                    })\n                }\n            }\n        }\n    }\n\n    setSS(){\n        this.setState({\n            bk : \"#83f297\"\n        })\n    }\n    render(){\n        return (\n            <TouchableOpacity style = {[test_page_style.slide_answer_container, {backgroundColor : this.state.bk}]}\n                onPress = {()=>{\n                    if(!this.props.question.ckecked){\n                        if(this.props.question.answer_correct === this.props.answer_text){\n                            this.setState({\n                                bk : \"#83f297\"\n                            })\n                        } else {\n                            this.setState({\n                                bk : \"#f27a72\"\n                            })\n                        }\n                        this.props.question.ckecked = true;\n                        this.props.that.setRespons(this.props.answer_text, this.props.question.id)\n                        this.props.question.selected = this.props.index;\n                    }\n                }}\n            >\n                <Text style = {test_page_style.slide_answer_text}>{this.props.answer_text}</Text>\n            </TouchableOpacity>\n        )\n    }\n\n}\n\n\nconst test_page_style = StyleSheet.create({\n    \n\n\n    slide_answer_container : {\n        borderRadius : 5, \n        borderColor : 'black',\n        borderWidth : 1,\n        width : 250,\n        padding : 10,\n        marginBottom : 15\n    },\n\n    slide_answer_text : {\n\n    },\n\n    \n    \n    \n})"]},"metadata":{},"sourceType":"module"}