{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tudordeviza/Documents/UTM/Color Project/src/page/test_page.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Swiper from 'react-native-web-swiper';\n\nvar TestPage = function (_Component) {\n  _inherits(TestPage, _Component);\n\n  var _super = _createSuper(TestPage);\n\n  function TestPage(props) {\n    var _this;\n\n    _classCallCheck(this, TestPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      page: 0\n    };\n    _this.swipe = React.createRef();\n    _this.questionListData = [];\n    _this.questionListPage = [];\n\n    _this.settingQuestionData();\n\n    _this.settingQuestionPages();\n\n    return _this;\n  }\n\n  _createClass(TestPage, [{\n    key: \"settingQuestionData\",\n    value: function settingQuestionData() {\n      this.questionListData.push({\n        id: 0,\n        image_url: 'https://sharpbrains.com/wp-content/uploads/2010/10/ColorIllusion.jpg ',\n        image_data: {\n          height: 946,\n          width: 939\n        },\n        question: 'Are the squares inside the blue and yellow squares all the same color?',\n        answer_correct: 'Yes',\n        answers: ['Yes', 'No']\n      });\n      this.questionListData.push({\n        id: 1,\n        image_url: 'https://www.washingtonpost.com/wp-apps/imrs.php?src=https://arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/XMBW2GEGUY7DNNH5UWSY2UJP5E.jpg&w=916 ',\n        image_data: {\n          height: 540,\n          width: 420\n        },\n        question: 'Which square (A or B) is darker?',\n        answer_correct: 'The squares are identical',\n        answers: ['A', 'B', 'The squares are identical']\n      });\n      this.questionListData.push({\n        id: 2,\n        image_url: 'https://www.washingtonpost.com/wp-apps/imrs.php?src=https://arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/NHF5OJZDHI2QPLVZ6ND4DTLZM4.jpg&w=916',\n        image_data: {\n          height: 394,\n          width: 271\n        },\n        question: 'Which surface color is darker?',\n        answer_correct: 'The surface colors of A and B are the same',\n        answers: ['A', 'B', 'The surface colors of A and B are the same']\n      });\n      this.questionListData.push({\n        id: 3,\n        image_url: 'https://www.washingtonpost.com/wp-apps/imrs.php?src=https://arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/3GMHRYU6HY74PG57FE3ZYYOA3I.png&w=916',\n        image_data: {\n          height: 581,\n          width: 800\n        },\n        question: 'Which part of the bar is darker?',\n        answer_correct: 'The color of the bar is constant',\n        answers: ['The color of the bar is constant', 'The left part', 'The right part']\n      });\n    }\n  }, {\n    key: \"settingQuestionPages\",\n    value: function settingQuestionPages() {\n      for (var i = 0; i < this.questionListData.length; i += 1) {\n        this.questionListPage.push(this.getPageByData(this.questionListData[i]));\n      }\n    }\n  }, {\n    key: \"getPageByData\",\n    value: function getPageByData(question) {\n      var _this2 = this;\n\n      var h, w;\n      h = question.image_data.height;\n      w = question.image_data.width;\n\n      while (h > 400) {\n        w = w / 2;\n        h = h / 2;\n      }\n\n      return React.createElement(View, {\n        style: test_page_style.slide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: question.image_url\n        },\n        style: {\n          height: h,\n          width: w\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: test_page_style.slide_title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, question.question), question.answers.map(function (answer_text, index) {\n        var bk_local = \"#fff\";\n        var ss = \"bk_\" + question.id + \"_\" + index;\n\n        _this2.setState(_defineProperty({}, ss, '#fff'));\n\n        return React.createElement(TouchableOpacity, {\n          style: [test_page_style.slide_answer_container, {\n            backgroundColor: _this2.state[ss]\n          }],\n          onPress: function onPress() {\n            alert(ss);\n\n            if (question.answer_correct === answer_text) {\n              _this2.setState(_defineProperty({}, ss, \"#83f297\"));\n            } else {\n              _this2.setState(_defineProperty({}, ss, \"#f27a72\"));\n            }\n\n            _this2.setState({\n              ref: true\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: test_page_style.slide_answer_text,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }\n        }, answer_text));\n      }));\n    }\n  }, {\n    key: \"backSlider\",\n    value: function backSlider() {\n      if (this.state.page !== 0) {\n        this.setState({\n          page: this.state.page - 1\n        });\n        this.swipe.goToPrev();\n      } else {\n        alert(\"First Page\");\n      }\n    }\n  }, {\n    key: \"nextSlide\",\n    value: function nextSlide() {\n      if (this.state.page !== this.questionListPage.length) {\n        this.setState({\n          page: this.state.page + 1\n        });\n        this.swipe.goToNext();\n      } else {\n        alert(\"Last Page\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: test_page_style.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: test_page_style.body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this3.backSlider();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, \"BACK\")), React.createElement(View, {\n        style: {\n          height: Dimensions.get('window').height,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, React.createElement(Swiper, {\n        ref: function ref(r) {\n          _this3.swipe = r;\n        },\n        controlsEnabled: false,\n        style: test_page_style.pager_view,\n        gesturesEnabled: function gesturesEnabled() {\n          return false;\n        },\n        from: this.state.page,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }, this.questionListPage.map(function (page) {\n        return page;\n      }))), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this3.nextSlide();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, \"NEXT\"))));\n    }\n  }]);\n\n  return TestPage;\n}(Component);\n\nexport { TestPage as default };\nvar test_page_style = StyleSheet.create({\n  main: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: \"100%\",\n    width: '100%'\n  },\n  body: {\n    flexDirection: 'row',\n    width: '60%',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  pager_view: {\n    flex: 1\n  },\n  slide: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  slide_title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 25,\n    marginTop: 20\n  },\n  slide_answer_container: {\n    borderRadius: 5,\n    borderColor: 'black',\n    borderWidth: 1,\n    width: 250,\n    padding: 10,\n    marginBottom: 15\n  },\n  slide_answer_text: {}\n});","map":{"version":3,"sources":["/Users/tudordeviza/Documents/UTM/Color Project/src/page/test_page.js"],"names":["React","Component","Swiper","TestPage","props","state","page","swipe","createRef","questionListData","questionListPage","settingQuestionData","settingQuestionPages","push","id","image_url","image_data","height","width","question","answer_correct","answers","i","length","getPageByData","h","w","test_page_style","slide","uri","slide_title","map","answer_text","index","bk_local","ss","setState","slide_answer_container","backgroundColor","alert","ref","slide_answer_text","goToPrev","goToNext","main","body","backSlider","Dimensions","get","r","pager_view","nextSlide","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","fontSize","fontWeight","marginBottom","marginTop","borderRadius","borderColor","borderWidth","padding"],"mappings":"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","sourcesContent":["import  React, { Component } from  'react';\nimport { View, StyleSheet, TouchableOpacity, Image, Text, Dimensions } from 'react-native';\nimport Swiper from 'react-native-web-swiper';\n\nexport default class TestPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page : 0,\n\n        }\n\n        this.swipe = React.createRef();\n\n        this.questionListData = [];\n        this.questionListPage = [];\n\n        this.settingQuestionData();\n        this.settingQuestionPages();\n\n    }\n\n    settingQuestionData(){\n\n       \n\n        this.questionListData.push({\n            id : 0,\n            image_url : 'https://sharpbrains.com/wp-content/uploads/2010/10/ColorIllusion.jpg ',\n            image_data : {\n                height : 946 ,\n                width : 939 \n            },\n            question : 'Are the squares inside the blue and yellow squares all the same color?',\n            answer_correct : 'Yes',\n            answers : ['Yes', 'No'],\n        })\n\n        this.questionListData.push({\n            id : 1,\n            image_url : 'https://www.washingtonpost.com/wp-apps/imrs.php?src=https://arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/XMBW2GEGUY7DNNH5UWSY2UJP5E.jpg&w=916 ',\n            image_data : {\n                height : 540 ,\n                width : 420 \n            },\n            question : 'Which square (A or B) is darker?',\n            answer_correct : 'The squares are identical',\n            answers : ['A', 'B', 'The squares are identical'],\n        })\n        \n\n        this.questionListData.push({\n            id : 2,\n            image_url : 'https://www.washingtonpost.com/wp-apps/imrs.php?src=https://arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/NHF5OJZDHI2QPLVZ6ND4DTLZM4.jpg&w=916',\n            image_data : {\n                height : 394 ,\n                width : 271\n            },\n            question : 'Which surface color is darker?',\n            answer_correct : 'The surface colors of A and B are the same',\n            answers : ['A', 'B', 'The surface colors of A and B are the same'],\n        })\n\n        this.questionListData.push({\n            id : 3,\n            image_url : 'https://www.washingtonpost.com/wp-apps/imrs.php?src=https://arc-anglerfish-washpost-prod-washpost.s3.amazonaws.com/public/3GMHRYU6HY74PG57FE3ZYYOA3I.png&w=916',\n            image_data : {\n                height : 581 ,\n                width : 800  \n            },\n            question : 'Which part of the bar is darker?',\n            answer_correct : 'The color of the bar is constant',\n            answers : ['The color of the bar is constant','The left part', 'The right part'],\n        })\n    }\n\n    settingQuestionPages(){\n        for(var i = 0 ; i < this.questionListData.length ; i+=1){\n            this.questionListPage.push(this.getPageByData(this.questionListData[i]));\n        }\n    }\n\n    getPageByData(question){\n        var h, w;\n        h = question.image_data.height;\n        w = question.image_data.width;\n\n        while(h > 400){\n            w = w/2;\n            h = h/2;\n        }\n        return(\n            <View style = {test_page_style.slide}>\n                <Image source = {{uri : question.image_url}} style = {{height : h, width : w}}/>\n                <Text style = {test_page_style.slide_title}>{question.question}</Text>\n                {question.answers.map((answer_text, index) => {\n                    var bk_local = \"#fff\"\n                    var ss =  \"bk_\"+question.id+\"_\"+index;\n\n                    this.setState({\n                        [ss] : '#fff'\n                    })\n                    return( // bad f27a72  good 83f297\n                        <TouchableOpacity style = {[test_page_style.slide_answer_container, {backgroundColor : this.state[ss]}]}\n                            onPress = {()=>{\n                                alert(ss)\n                                if(question.answer_correct === answer_text){\n                                    this.setState({\n                                        [ss] : \"#83f297\"\n                                    });\n\n                                } else {\n                                    this.setState({\n                                        [ss] : \"#f27a72\"\n                                    });\n                                }\n                                this.setState({ref : true})\n                            }}\n                        >\n                            <Text style = {test_page_style.slide_answer_text}>{answer_text}</Text>\n                        </TouchableOpacity>\n                    );\n                })}\n            </View>\n        )\n       \n    }\n\n    backSlider(){\n        if(this.state.page !== 0){\n            this.setState({\n                page : this.state.page-1,\n            });\n            this.swipe.goToPrev(); \n        } else {\n            alert(\"First Page\")\n        }\n    }\n    \n    nextSlide(){\n        if(this.state.page !== this.questionListPage.length){\n            this.setState({\n                page : this.state.page+1,\n            });\n            this.swipe.goToNext();\n\n        } else {\n            alert(\"Last Page\")\n        }\n    }\n    \n\n    \n\n    render() {\n\n    \n        return (\n            <View style = {test_page_style.main}>\n                <View style = {test_page_style.body}> \n                    <TouchableOpacity\n                        onPress= {()=>{this.backSlider()}}\n                        >\n                        <Text>BACK</Text>\n                    </TouchableOpacity>\n\n                    \n                    <View style = {{height : Dimensions.get('window').height, width : '100%', }}>\n                        <Swiper\n                            ref = {(r)=>{this.swipe = r;}}\n                            controlsEnabled = {false}\n                            style = {test_page_style.pager_view}\n                            gesturesEnabled = {()=>false}\n                            from = {this.state.page}\n                            >\n                            {this.questionListPage.map((page)=>{\n                                return page;\n                            })}\n                            \n                        </Swiper>\n                    </View>\n                    \n                    <TouchableOpacity\n                        onPress= {()=>{this.nextSlide()}}\n                        >\n                        <Text>NEXT</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        )\n    }\n\n}\n\n\n\nconst test_page_style = StyleSheet.create({\n    main : {\n        flex : 1,\n        justifyContent : 'center',\n        alignItems : 'center',\n        height : \"100%\",\n        width : '100%'\n    },\n\n    body : {\n        flexDirection : 'row',\n        width : '60%',\n        alignItems : 'center',\n        justifyContent : 'space-between'\n    },\n\n    pager_view : {\n        \n        flex : 1\n    },\n\n    slide : {\n       \n        justifyContent : 'center',\n        alignItems : 'center',\n        flex : 1,\n    },\n\n    slide_title : {\n        fontSize : 24,\n        fontWeight : 'bold',\n        marginBottom : 25,\n        marginTop : 20\n        \n    },\n\n    slide_answer_container : {\n        borderRadius : 5, \n        borderColor : 'black',\n        borderWidth : 1,\n        width : 250,\n        padding : 10,\n        marginBottom : 15\n    },\n\n    slide_answer_text : {\n\n    },\n\n    \n    \n    \n})"]},"metadata":{},"sourceType":"module"}