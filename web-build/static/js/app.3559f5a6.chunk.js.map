{"version":3,"sources":["src/page/start_page.js","src/page/test_page.js","src/navigation.js","src/App.js"],"names":["StartPage","props","state","show_start_button","show_start_input_container","user_name_surname","user_age","user_sex","this","setState","navigation","navigate","type","userData","View","style","start_page_style","main","TouchableOpacity","button_start","onPress","goToDataInput","Text","button_text","container_input_data","title_input_data","description_input_data","TextInput","input_user_data","onChangeText","t","value","placeholder","Picker","selectedValue","onValueChange","itemValue","itemIndex","Item","label","replace","keyboardType","container_button2test","button2test","goNextAnonim","text_button2test","goNextUser","Component","StyleSheet","create","flex","justifyContent","alignItems","height","width","borderRadius","backgroundColor","color","fontSize","fontWeight","textAlign","marginTop","borderColor","borderWidth","padding","flexDirection","margin","TestPage","page","swipe","React","createRef","questionListData","questionListPage","settingQuestionData","settingQuestionPages","push","id","image_url","image_data","question","answer_correct","answers","i","length","getPageByData","test_page_style","slide","Image","source","uri","slide_title","map","answer_text","slide_answer_container","slide_answer_text","goToPrev","alert","goToNext","body","backSlider","ref","r","controlsEnabled","pager_view","gesturesEnabled","from","nextSlide","marginBottom","Stack","createStackNavigator","MyStack","NavigationContainer","Navigator","Screen","name","component","options","headerShown","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","App"],"mappings":"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","file":"static/js/app.3559f5a6.chunk.js","sourcesContent":["import  React, { Component } from  'react';\nimport { View, StyleSheet, TouchableOpacity, Image, Text, Dimensions, TextInput, Picker } from 'react-native';\n\nexport default class StartPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show_start_button : true,\n            show_start_input_container : false,\n            user_name_surname : '',\n            user_age : '',\n            user_sex : 'M'\n        }\n\n    }\n\n    goToDataInput(){\n        this.setState({\n            show_start_button : false,\n            show_start_input_container : true,\n        })\n\n        \n    }\n\n    goNextAnonim(){\n        var userData = {\n            type : 0\n        };\n\n        this.props.navigation.navigate(\"TestPage\", userData)\n\n    }\n\n    goNextUser(){\n        var userData = {\n            type : 1,\n            user_name_surname : this.state.user_name_surname,\n            user_age : this.state.user_age,\n            user_sex : this.state.user_sex,\n        };\n\n        this.props.navigation.navigate(\"TestPage\", userData)\n\n\n    }\n\n    render() {\n\n    \n        return (\n            <View style = {start_page_style.main}>\n                { this.state.show_start_button && \n                    <TouchableOpacity style = {start_page_style.button_start}\n                        onPress = {()=>{this.goToDataInput()}}>\n                        <Text style = {start_page_style.button_text}>Start</Text>\n                    </TouchableOpacity>\n                }\n\n                { this.state.show_start_input_container && \n                    <View style = {start_page_style.container_input_data}>\n                        <Text style = {start_page_style.title_input_data}>Input Data for Statistic</Text>\n                        <Text style = {start_page_style.description_input_data}>\n                            The information is collected for the most accurate and precise statistics, \n                            results are not interconnected with your personal data. \n                        </Text>\n\n                        <TextInput\n                            style = {start_page_style.input_user_data}\n                            onChangeText = {(t)=>{this.setState({user_name_surname : t})}}\n                            value = {this.state.user_name_surname}\n                            placeholder = \"Name Surname\"\n                        />\n\n                        <Picker\n                                selectedValue={this.state.user_sex}\n                                style={start_page_style.input_user_data}\n                                onValueChange={(itemValue, itemIndex) => this.setState({user_sex : itemValue})}\n                            >\n                                <Picker.Item label=\"M\" value=\"M\" />\n                                <Picker.Item label=\"F\" value=\"F\" />\n                                <Picker.Item label=\"Personal\" value=\"none\" />\n\n                        </Picker>\n\n                        <TextInput\n                            style = {start_page_style.input_user_data}\n                            onChangeText = {(t)=>{this.setState({user_age : t.replace(/[^0-9]/g, '')})}}\n                            value = {this.state.user_age}\n                            placeholder = \"Age\"\n                            keyboardType = 'numeric'\n                        />\n\n                        <View style = {start_page_style.container_button2test}>\n                            <TouchableOpacity \n                                style = {start_page_style.button2test}\n                                onPress = {()=>{this.goNextAnonim()}}\n                            >\n                                <Text style = {start_page_style.text_button2test}>\n                                    Anonim test\n                                </Text>\n                            </TouchableOpacity>\n\n                            <TouchableOpacity \n                                style = {start_page_style.button2test}\n                                onPress = {()=>{this.goNextUser()}}\n                                >\n                                <Text style = {start_page_style.text_button2test}>\n                                    Log with personal data\n                                </Text>\n\n                            </TouchableOpacity>\n\n                        </View>\n\n                    </View>\n\n                    }\n            </View>\n        )\n    }\n\n}\n\nconst start_page_style = StyleSheet.create({\n    main : {\n        flex : 1,\n        justifyContent : 'center',\n        alignItems : 'center',\n        height : \"100%\",\n        width : '100%'\n    },\n\n    button_start : {\n        height : 40,\n        width : 150,\n        borderRadius : 5,\n        backgroundColor : 'blue',\n        justifyContent : 'center',\n        alignItems : 'center'\n    },\n\n    button_text : {\n        color : 'white',\n        fontSize : 18,\n        fontWeight : 'bold',\n    },\n\n    container_input_data : {\n        height : \"60%\",\n        width : '50%',\n        alignItems : 'center'\n    },\n\n    title_input_data : {\n        fontSize : 23,\n        fontWeight : 'bold',\n    },\n\n    description_input_data : {\n        textAlign : 'center',\n        marginTop : 20\n    },\n\n    input_user_data : {\n        width : \"25%\",\n        height : 40,\n        borderRadius : 5,\n        borderColor : 'black',\n        borderWidth : 1,\n        marginTop : 20, \n        padding  : 5,\n        backgroundColor : 'white'\n    },\n\n    container_button2test : {\n        flexDirection : 'row',\n      \n\n    },\n\n    button2test : {\n        height : 40,\n        width : 120,\n        margin : 20,\n        justifyContent : 'center',\n        alignItems : 'center',\n        backgroundColor : \"blue\",\n        borderRadius : 6,\n        padding : 10\n    },\n\n    text_button2test : {\n        textAlign : 'center',\n        color : 'white',\n        fontWeight : 'bold'\n    }\n\n})","import  React, { Component } from  'react';\nimport { View, StyleSheet, TouchableOpacity, Image, Text, Dimensions } from 'react-native';\nimport Swiper from 'react-native-web-swiper';\n\nexport default class TestPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page : 0,\n\n        }\n\n        this.swipe = React.createRef();\n\n        this.questionListData = [];\n        this.questionListPage = [];\n\n        this.settingQuestionData();\n        this.settingQuestionPages();\n\n    }\n\n    settingQuestionData(){\n\n       \n\n        this.questionListData.push({\n            id : 0,\n            image_url : 'https://www.researchgate.net/profile/Stephen-Henley-2/publication/327830049/figure/fig2/AS:870030086516736@1584442745599/Official-logo-of-IAMG.png',\n            image_data : {\n                height : 180,\n                width : 405\n            },\n            question : 'Test question 1 ?',\n            answer_correct : 'Correct Answer',\n            answers : ['Incorrect Answer 1', 'Incorrect Answer 2', 'Correct Answer'],\n        })\n\n        this.questionListData.push({\n            id : 1,\n            image_url : 'https://www.researchgate.net/profile/Stephen-Henley-2/publication/327830049/figure/fig2/AS:870030086516736@1584442745599/Official-logo-of-IAMG.png',\n            image_data : {\n                height : 180,\n                width : 405\n            },\n            question : 'Test question 2 ?',\n            answer_correct : 'Correct Answer',\n            answers : ['Incorrect Answer 1', 'Incorrect Answer 2', 'Correct Answer', 'Incorrect Answer 3'],\n        })\n        \n\n        this.questionListData.push({\n            id : 2,\n            image_url : 'https://www.researchgate.net/profile/Stephen-Henley-2/publication/327830049/figure/fig2/AS:870030086516736@1584442745599/Official-logo-of-IAMG.png',\n            image_data : {\n                height : 180,\n                width : 405\n            },\n            question : 'Test question 3 ?',\n            answer_correct : 'Correct Answer',\n            answers : ['Correct Answer', 'Incorrect Answer 1', 'Incorrect Answer 2'],\n        })\n\n        this.questionListData.push({\n            id : 3,\n            image_url : 'https://www.researchgate.net/profile/Stephen-Henley-2/publication/327830049/figure/fig2/AS:870030086516736@1584442745599/Official-logo-of-IAMG.png',\n            image_data : {\n                height : 180,\n                width : 405\n            },\n            question : 'Test question 4 ?',\n            answer_correct : 'Correct Answer',\n            answers : ['Incorrect Answer 1','Correct Answer'],\n        })\n    }\n\n    settingQuestionPages(){\n        for(var i = 0 ; i < this.questionListData.length ; i+=1){\n            this.questionListPage.push(this.getPageByData(this.questionListData[i]));\n        }\n    }\n\n    getPageByData(question){\n            return(\n                <View style = {test_page_style.slide}>\n                    <Image source = {{uri : question.image_url}} style = {{height : question.image_data.height, width : question.image_data.width}}/>\n                    <Text style = {test_page_style.slide_title}>{question.question}</Text>\n                    {question.answers.map((answer_text) => {\n                        return(\n                            <TouchableOpacity style = {test_page_style.slide_answer_container}>\n                                <Text style = {test_page_style.slide_answer_text}>{answer_text}</Text>\n                            </TouchableOpacity>\n                        );\n                    })}\n                </View>\n            )\n       \n    }\n\n    backSlider(){\n        if(this.state.page !== 0){\n            this.setState({\n                page : this.state.page-1,\n            });\n            this.swipe.goToPrev(); \n        } else {\n            alert(\"First Page\")\n        }\n    }\n    \n    nextSlide(){\n        if(this.state.page !== this.questionListPage.length){\n            this.setState({\n                page : this.state.page+1,\n            });\n            this.swipe.goToNext();\n\n        } else {\n            alert(\"Last Page\")\n        }\n    }\n    \n\n    \n\n    render() {\n\n    \n        return (\n            <View style = {test_page_style.main}>\n                <View style = {test_page_style.body}> \n                    <TouchableOpacity\n                        onPress= {()=>{this.backSlider()}}\n                        >\n                        <Text>BACK</Text>\n                    </TouchableOpacity>\n\n                    \n                    <View style = {{height : 400, width : '100%', }}>\n                        <Swiper\n                            ref = {(r)=>{this.swipe = r;}}\n                            controlsEnabled = {false}\n                            style = {test_page_style.pager_view}\n                            gesturesEnabled = {()=>false}\n                            from = {this.state.page}\n                            >\n                            {this.questionListPage.map((page)=>{\n                                return page;\n                            })}\n                            \n                        </Swiper>\n                    </View>\n                    \n                    <TouchableOpacity\n                        onPress= {()=>{this.nextSlide()}}\n                        >\n                        <Text>NEXT</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        )\n    }\n\n}\n\n\n\nconst test_page_style = StyleSheet.create({\n    main : {\n        flex : 1,\n        justifyContent : 'center',\n        alignItems : 'center',\n        height : \"100%\",\n        width : '100%'\n    },\n\n    body : {\n        flexDirection : 'row',\n        width : '60%',\n        alignItems : 'center',\n        justifyContent : 'space-between'\n    },\n\n    pager_view : {\n        \n        flex : 1\n    },\n\n    slide : {\n       \n        justifyContent : 'center',\n        alignItems : 'center',\n        flex : 1,\n    },\n\n    slide_title : {\n        fontSize : 24,\n        fontWeight : 'bold',\n        marginBottom : 25,\n        marginTop : 20\n        \n    },\n\n    slide_answer_container : {\n        borderRadius : 5, \n        borderColor : 'black',\n        borderWidth : 1,\n        width : 250,\n        padding : 10,\n        marginBottom : 15\n    },\n\n    slide_answer_text : {\n\n    },\n\n    \n    \n    \n})","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport StartPage from './page/start_page'\nimport TestPage from './page/test_page'\n\n\nconst Stack = createStackNavigator();\n\nexport default function MyStack () {\n    return (\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"StartPage\"\n            component={StartPage}\n            options = {{headerShown: false}}\n            />\n          <Stack.Screen\n            name=\"TestPage\"\n            component={TestPage}\n            options = {{headerShown: false}}\n            />\n\n        </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n","import React from 'react';\nimport MyStack from './navigation'\n\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBKOcaZatqN_LChQN3yhrMC6EbsYSGoh0g\",\n  authDomain: \"colors-89f95.firebaseapp.com\",\n  databaseURL: \"https://colors-89f95-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"colors-89f95\",\n  storageBucket: \"colors-89f95.appspot.com\",\n  messagingSenderId: \"643985981212\",\n  appId: \"1:643985981212:web:a7f536e4e28a44025f44d9\",\n  measurementId: \"G-RCSRWSBZ5X\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nexport default function App() {\n  return (\n      <MyStack/>\n  );\n}\n\n\n"],"sourceRoot":""}